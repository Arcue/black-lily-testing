
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$Black-Lily-Gaming-primary: mat-palette($mat-indigo);
$Black-Lily-Gaming-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$Black-Lily-Gaming-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$Black-Lily-Gaming-theme: mat-light-theme((
  color: (
    primary: $Black-Lily-Gaming-primary,
    accent: $Black-Lily-Gaming-accent,
    warn: $Black-Lily-Gaming-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($Black-Lily-Gaming-theme);


/* You can add global styles to this file, and also import other style files */

body {
  font-family: Arial, Helvetica, sans-serif;
  color: Lavender;
  background: rgb(45, 2, 77);
  margin: 0;
}

.root{
  display: grid;
  height: 100vh;
  grid-template-rows: 135px 1fr 75px;
  align-items: center;
}

.split-content-container{
  display: grid;
  margin: auto;
  height: 100%;
  background: #1e1e1e;
  width: 90%;
  grid-template-columns: 1fr 2.75fr;
  grid-template-areas: "left-column right-column";
  border-radius: 0.5rem 0.5rem 0.5rem 0.5rem;
  box-shadow: 0 0.15rem 0.25rem 0 rgba(0,0,0, 75);
}

.centered-content-container{
  display: grid;
  margin: auto;
  height: 100%;
  background: #1e1e1e;
  width: 90%;
  grid-template-columns: 1fr 2fr 1fr;
  border-radius: 0.5rem 0.5rem 0.5rem 0.5rem;
  box-shadow: 0 0.15rem 0.25rem 0 rgba(0,0,0, 75);
  justify-items: center;
}

.centered-column{
  grid-column-start: 2;
  text-align: center;
}

.container {
  width:100%;
  background: #1e1e1e;
  display: grid;
  margin: 0;
  grid-template-columns: 100%;
  justify-items: center;
}

.container-item {
  grid-template-columns: 85%
}

.left-columnÂ {
  grid-area: left-column;
}
.grid-divider {
  border-right: 1.5px;
  border-right-style: solid;
  border-right-color: indigo;
}

.right-column {
  grid-area: right-column;
}
.button-link {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  text-decoration: none;
  color: Lavender;
  background-color: #1e1e1e;
  border-radius: 0.5rem 0.5rem 0.5rem 0.5rem;
  box-shadow: 0 0.15rem 0.25rem 0 rgba(0,0,0, 75);
  width: 90%;
  padding: .5rem;
  margin: -.5rem auto 0;
}

.button-link:hover {
  background-color: indigo;
}
.button-link:focus {
  outline: 1px solid indigo;
}
.info-box {
  background-color: #1e1e1e;
  border-radius: 0.5rem 0.5rem 0.5rem 0.5rem;
  box-shadow: 0 0.15rem 0.25rem 0 rgba(0,0,0, 75);
  width: 90%;
  height: 4rem;
  margin: -1.25rem auto 1.5rem;
}

.info-box p{
  padding: 1rem;
}

/** Webkit only scrollbar edit until i figure out a global **/
::-webkit-scrollbar {
  width: .75rem;
  margin-left: -.75rem;
}
 ::-webkit-scrollbar-track {
  background: rgb(45, 2, 77);
  border-radius: 0 0.5rem 0.5rem 0;
  border-left-style: solid;
  border-left-width: .1rem;
  border-left-color: rgb(0,0,0);
}

::-webkit-scrollbar-thumb {
  background: rgb(103,103,103);
  border-radius: 0 0.5rem 0.5rem 0;
  border-left-style: solid;
  border-left-width: .1rem;
  border-left-color: rgb(0,0,0);
}
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
